C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 22:29:40 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD_INTERFACING
OBJECT MODULE PLACED IN .\Objects\LCD_Interfacing.obj
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE LCD_Interfacing.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\LCD_Interfacing.lst) TABS(2) OBJECT(.\Objects\LCD_Interfacing.obj)

line level    source

   1          // This program interface 8051 with a 16x2 line LCD. It used port 2 as data bus, 
   2          // port as control bus, and displays Hello World!on the first display line
   3          #include <reg51.h>
   4          
   5          #define ldata P2
   6          #define COMMAND 0
   7          #define LCD_DATA 1
   8          
   9          sbit rs = P3^6;
  10          sbit rw = P3^5;
  11          sbit en = P3^7;
  12          sbit busy = P2^7; // connected to DB7 on the LCD
  13          
  14          void init_lcd();
  15          void write_to_lcd(unsigned char value, bit mode);
  16          void MSDelay(unsigned int itime);
  17          void lcdready(void);
  18          
  19          
  20          void main(void)
  21          {
  22   1        unsigned int count;
  23   1        
  24   1        char hundred = 0x30;
  25   1        char ten= 0x30;
  26   1        char one = 0x30;
  27   1        
  28   1        unsigned char code msg[]="Hello John";
  29   1        unsigned char code ctr[]="Counter:";
  30   1        unsigned char i=0;
  31   1        init_lcd();                                                                                       
  32   1      
  33   1        while (ctr[i]!='\0') 
  34   1         write_to_lcd(ctr[i++],LCD_DATA);
  35   1        
  36   1        
  37   1        for (count = 0; count <= 2000; count++){    
  38   2          if (one > 0x39){
  39   3            one = 0x30;
  40   3            ten++;
  41   3            if (ten > 0x39){
  42   4              ten = 0x30;
  43   4              hundred++;
  44   4              if (hundred > 0x39){
  45   5                hundred = 0x30;
  46   5              }
  47   4            }
  48   3          }
  49   2          
  50   2          //Constantly rewriting/updating all digits.
  51   2          //Note: Write MSB first. If LSB is written first, order is reversed. 00 -> 10 -> 20 -> 30
  52   2          write_to_lcd(hundred,LCD_DATA);
  53   2          write_to_lcd(ten,LCD_DATA);
  54   2          write_to_lcd(one,LCD_DATA);
C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 22:29:40 PAGE 2   

  55   2          
  56   2          one++; //Incrementing least significant bit
  57   2          
  58   2          MSDelay(10);
  59   2          write_to_lcd(0x88,COMMAND); //Sending cursor to position 8 (Hundred's location)
  60   2        }
  61   1        
  62   1        while (1);
  63   1          
  64   1      }
*** WARNING C280 IN LINE 28 OF LCD_Interfacing.c: 'msg': unreferenced local variable
  65          
  66          
  67          //  JOHN's Functions //
  68          
  69          
  70          // setup LCD for the required display 
  71          void init_lcd()
  72          {
  73   1        // Function set format: 001 DL N F  * *
  74   1        // Function set value: 00111000
  75   1        // DL=1, use 8-bit data bus; N=1,1/16 duty(2 lines),
  76   1        // F=0, 5x7 dot character font 
  77   1        write_to_lcd(0x38,COMMAND); 
  78   1                                    
  79   1        // Display On/Off Control format: 00001 D C B
  80   1        // Display On/Off Control value: 00001110
  81   1        // D=1, display on; C=1, cursor on; B=0, cursor blink off
  82   1        write_to_lcd(0x0E,COMMAND);
  83   1      
  84   1        // Entry mode set format: 000001 I/D S
  85   1        // Entry mode set value: 00000110
  86   1        // I/D=1, Increment cursor position; S=0, no display shift
  87   1        write_to_lcd(0x06,COMMAND);
  88   1      
  89   1        // Clear display and returns cursor to the home position(address 0) 
  90   1        write_to_lcd(0x01,COMMAND);
  91   1      }
  92          
  93          // write a command or a character to LCD
  94          void write_to_lcd(unsigned char value, bit mode)
  95          {
  96   1        lcdready();
  97   1        ldata = value; 
  98   1        rs = mode; // set for data, reset for command
  99   1        rw = 0;
 100   1        en = 1;
 101   1        MSDelay(1);
 102   1        en = 0;
 103   1      }
 104          
 105          void MSDelay(unsigned int itime)
 106          {
 107   1         unsigned int i, j;
 108   1      
 109   1         for (i=0;i<itime;i++)
 110   1           for (j=0;j<1275;j++);
 111   1      }
 112          
 113          // wait for LCD to become ready
 114          void lcdready(void)
 115          {
C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 22:29:40 PAGE 3   

 116   1        busy = 1;
 117   1        en = 1;
 118   1        rs = 0; // It's a command
 119   1        rw = 1; // It's a read command
 120   1        while (busy) {
 121   2          en = 0;
 122   2          MSDelay(1);
 123   2          en = 1;
 124   2        }
 125   1        en=0;
 126   1        rw=0;
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    253    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
