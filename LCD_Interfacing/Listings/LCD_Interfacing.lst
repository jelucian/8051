C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 19:26:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD_INTERFACING
OBJECT MODULE PLACED IN .\Objects\LCD_Interfacing.obj
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE LCD_Interfacing.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\LCD_Interfacing.lst) TABS(2) OBJECT(.\Objects\LCD_Interfacing.obj)

line level    source

   1          // This program interface 8051 with a 16x2 line LCD. It used port 2 as data bus, 
   2          // port as control bus, and displays ¡°Hello World!¡±on the first display line
   3          #include <reg51.h>
   4          
   5          #define ldata P2
   6          #define COMMAND 0
   7          #define LCD_DATA 1
   8          
   9          sbit rs = P3^6;
  10          sbit rw = P3^5;
  11          sbit en = P3^7;
  12          sbit busy = P2^7; // connected to DB7 on the LCD
  13          unsigned int z = 0;
  14          
  15          void init_lcd();
  16          void write_to_lcd(unsigned char value, bit mode);
  17          void MSDelay(unsigned int itime);
  18          void lcdready(void);
  19          
  20          
  21          void main(void)
  22          {
  23   1        char msb = 0x30;
  24   1        char lsb = 0x30;
  25   1        unsigned char code msg[]="Hellno World!";
  26   1        unsigned char code ctr[]="Counter:";
  27   1        unsigned char i=0;
  28   1        init_lcd();                                                                                       
  29   1      
  30   1        
  31   1        while (ctr[i]!='\0') 
  32   1         write_to_lcd(ctr[i++],LCD_DATA);
  33   1        
  34   1        while (1)
  35   1        {   
  36   2          if (lsb > 0x39){
  37   3            lsb = 0x30;
  38   3            //write_to_lcd(0x88,COMMAND);
  39   3          }
  40   2          if (lsb > 0x39){
  41   3            lsb = 0x30;
  42   3            //write_to_lcd(0x89,COMMAND);
  43   3          }
  44   2          
  45   2          write_to_lcd(lsb,LCD_DATA);
  46   2          lsb++;
  47   2          
  48   2          MSDelay(250);
  49   2          write_to_lcd(0x89,COMMAND);
  50   2        }
  51   1          
  52   1      }
*** WARNING C280 IN LINE 25 OF LCD_Interfacing.c: 'msg': unreferenced local variable
  53          
C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 19:26:04 PAGE 2   

  54          // setup LCD for the required display 
  55          void init_lcd()
  56          {
  57   1        // Function set format: 001 DL N F  * *
  58   1        // Function set value: 00111000
  59   1        // DL=1, use 8-bit data bus; N=1,1/16 duty(2 lines),
  60   1        // F=0, 5x7 dot character font 
  61   1        write_to_lcd(0x38,COMMAND); 
  62   1                                    
  63   1        // Display On/Off Control format: 00001 D C B
  64   1        // Display On/Off Control value: 00001110
  65   1        // D=1, display on; C=1, cursor on; B=0, cursor blink off
  66   1        write_to_lcd(0x0E,COMMAND);
  67   1      
  68   1        // Entry mode set format: 000001 I/D S
  69   1        // Entry mode set value: 00000110
  70   1        // I/D=1, Increment cursor position; S=0, no display shift
  71   1        write_to_lcd(0x06,COMMAND);
  72   1      
  73   1        // Clear display and returns cursor to the home position(address 0) 
  74   1        write_to_lcd(0x01,COMMAND);
  75   1      }
  76          
  77          // write a command or a character to LCD
  78          void write_to_lcd(unsigned char value, bit mode)
  79          {
  80   1        lcdready();
  81   1        ldata = value; 
  82   1        rs = mode; // set for data, reset for command
  83   1        rw = 0;
  84   1        en = 1;
  85   1        MSDelay(1);
  86   1        en = 0;
  87   1      }
  88          
  89          void MSDelay(unsigned int itime)
  90          {
  91   1         unsigned int i, j;
  92   1      
  93   1         for (i=0;i<itime;i++)
  94   1           for (j=0;j<1275;j++);
  95   1      }
  96          
  97          // wait for LCD to become ready
  98          void lcdready(void)
  99          {
 100   1        busy = 1;
 101   1        en = 1;
 102   1        rs = 0; // It's a command
 103   1        rw = 1; // It's a read command
 104   1        while (busy) {
 105   2          en = 0;
 106   2          MSDelay(1);
 107   2          en = 1;
 108   2        }
 109   1        en=0;
 110   1        rw=0;
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    198    ----
C51 COMPILER V9.56.0.0   LCD_INTERFACING                                                   11/16/2017 19:26:04 PAGE 3   

   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
