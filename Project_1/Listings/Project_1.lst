C51 COMPILER V9.56.0.0   PROJECT_1                                                         10/20/2017 17:14:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE PROJECT_1
OBJECT MODULE PLACED IN .\Objects\Project_1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Project_1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\Project_1.lst) TABS(2) OBJECT(.\Objects\Project_1.obj)

line level    source

   1          /********************************************************************************
   2           *
   3           * Author:   Rosswell Tiongco & Jesus Luciano
   4           * Email:    rosswelltiongco@gmail.com & jlucian995@gmail.com
   5           * Filename: Project_1.c
   6           * Date:     10/16/17
   7           * Version:  1.0
   8           *
   9           * Description: 
  10           *
  11           * Mode 1: bouncing mode, MSB -> LSB -> MSB
  12                      -shift 7 times then shift 7 times back
  13           * Mode 2: 4 bit upcounter, external interrupt P3.2 determins count up or count down
  14           *         
  15           *         P0.4 - P0.7 to control inital value
  16           * Mode 3: double bouncing, b7 & b0 -> b6 & b1 -> b5 & b2 -> b4 & b3 then repeat
  17           * Mode 4: stack mode b7 -> b7 &b6 -> b7 & b6 & b5 etc then repeat
  18           * 
  19           * Mode control bits: p0.0 & p0.1
  20           * Speed control: P0.3 & P0.2
  21           * 00 0.1 seconds
  22           * 01 0.5 seconds
  23           * 10 1 seconds
  24           * 11 2 seconds
  25           *
  26           * Mode changed only when P3.3 push button set high
  27           * 
  28           *******************************************************************************/
  29          #include <reg51.h>
  30          
  31          //declare control bits
  32          sbit M0 = P0^0;
  33          sbit M1 = P0^1;
  34          sbit dir = P3^2;
  35          sbit D1 = P0^3;
  36          sbit D0 = P0^2;
  37          
  38          unsigned int i, j, x, count, delayVal = 0;
  39          
  40          //Timer
  41          void timer0(void) interrupt 1{//50ms 
  42   1        TR0 = 0;//turn timer off
  43   1        delayVal = delayVal - 1;//decrease delay value
  44   1        TH0 = 0x4B;//initial values
  45   1        TL0 = 0xFD;
  46   1      //  TR0 = 1;//turn timer on
  47   1      }
  48          
  49          void delay();
  50          
  51          //Mode 0
  52          void bounce();
  53          
  54          //Mode 1
C51 COMPILER V9.56.0.0   PROJECT_1                                                         10/20/2017 17:14:20 PAGE 2   

  55          void counter();
  56          
  57          //Mode 2  
  58          void doubleBounce();
  59          
  60          //Mode 3
  61          void stack();
  62          /********************************************************/
  63          int main(){
  64   1        //Interrupt enable
  65   1        EA = 1;
  66   1        ET0 = 1;
  67   1        
  68   1        //Timer enable
  69   1        TMOD = 0x01;//timer 0 mode 1
  70   1        TH0 = 0x4B;//high bit value
  71   1        TL0 = 0xFD;//low bit value
  72   1        TR0 = 0;//turn off timer 0
  73   1        
  74   1        //I/O
  75   1        //Inputs
  76   1        P0 = 0xFF;
  77   1        P3 = 0xFF;
  78   1        
  79   1        //Outputs
  80   1        P1 = 0x00;
  81   1      
  82   1        //super loop
  83   1        while(1){
  84   2          //call all 4 functions, each one checks seperately
  85   2          //if mode bits are correct
  86   2          bounce();
  87   2          counter();
  88   2          
  89   2        }
  90   1        
  91   1      }
  92          /********************************************************/
  93          //time delay is 1.0825us
  94          //<<Timing not currently accurate
  95          void delay(){
  96   1        //Delay 0 = 0.1 sec
  97   1        if(~D1 & ~D0){
  98   2          delayVal = 50;
  99   2        }
 100   1        //Delay 1 = 0.5 sec
 101   1        else if(~D1 & D0){
 102   2          delayVal = 250;
 103   2        }
 104   1        //Delay 2 = 1 sec
 105   1        else if(D1 & ~D0){
 106   2          delayVal = 500;
 107   2        }
 108   1        //Delay 3 = 2 sec
 109   1        else{
 110   2          delayVal = 1000;
 111   2        }
 112   1        //stay in loop with timer 0 on until
 113   1        //delayVal = 0
 114   1        //delayVal decreases once every 5ms
 115   1        while(delayVal > 0){
 116   2            TR0 = 1;
C51 COMPILER V9.56.0.0   PROJECT_1                                                         10/20/2017 17:14:20 PAGE 3   

 117   2        }
 118   1        TR0 = 0;
 119   1      }
 120          
 121          //Mode 0
 122          void bounce(){
 123   1        //set initial value
 124   1        P1 = 0x80;
 125   1        x = 0;
 126   1        //Continuously checks if still in mode 0 every loop
 127   1        while(~M1 & ~M0){
 128   2          //move left 7 times
 129   2          if(x < 7){
 130   3            P1 = P1 / 2 ;
 131   3            x = x+1;
 132   3          }
 133   2          //move right 7 times
 134   2          else if(x < 14){
 135   3            P1 = P1 * 2;
 136   3            x = x+1;
 137   3          }
 138   2          //reset counter
 139   2          else{
 140   3            x = 0;
 141   3          }
 142   2          //call delay after every change
 143   2          delay();
 144   2        }
 145   1        
 146   1      }
 147          //Mode 1
 148          void counter(){
 149   1        //only pulls bits P0^7-P0^4
 150   1        count = P0 / 16;
 151   1        //continuously checks if in mode 1
 152   1        while(~M1 & M0){
 153   2          P1 = count;
 154   2          //increases counter if P3^2 is high
 155   2          if(dir == 1){
 156   3            count = count + 1;
 157   3          }
 158   2          //decreases counter if P3^2 is low
 159   2          else{
 160   3            count = count - 1;
 161   3          }
 162   2          //checks if count is out of bounds and resets
 163   2          if(count == 16){
 164   3            count = 0; 
 165   3          }
 166   2          if(count == -1){
 167   3            count = 15;
 168   3          }
 169   2          //call delay after every iteration
 170   2          delay();
 171   2        }
 172   1      }
 173          //Mode 2
 174          void doubleBounce(){
 175   1        
 176   1      }
 177          //Mode 3
 178          void stack(){
C51 COMPILER V9.56.0.0   PROJECT_1                                                         10/20/2017 17:14:20 PAGE 4   

 179   1        
 180   1      }
 181          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
